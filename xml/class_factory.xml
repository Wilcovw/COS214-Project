<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_factory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Factory</compoundname>
    <basecompoundref refid="class_infrastructure" prot="public" virt="non-virtual">Infrastructure</basecompoundref>
    <derivedcompoundref refid="class_aircraft_factory" prot="public" virt="non-virtual">AircraftFactory</derivedcompoundref>
    <derivedcompoundref refid="class_aquatic_vehicle_factory" prot="public" virt="non-virtual">AquaticVehicleFactory</derivedcompoundref>
    <derivedcompoundref refid="class_land_vehicle_factory" prot="public" virt="non-virtual">LandVehicleFactory</derivedcompoundref>
    <includes refid="_factory_8h" local="no">Factory.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_factory_1a491b82965922ce167e8d16ba7876dcb6" prot="private" static="no" mutable="no">
        <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> *</type>
        <definition>Vehicles* Factory::vehicle</definition>
        <argsstring></argsstring>
        <name>vehicle</name>
        <qualifiedname>Factory::vehicle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Factory.h" line="13" column="14" bodyfile="Factory.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_factory_1a19e6331ae3eca8c4a3242df7dc786044" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> *</type>
        <definition>virtual Vehicles * Factory::createVehicle</definition>
        <argsstring>(string model, double HP, double damage, double speed)=0</argsstring>
        <name>createVehicle</name>
        <qualifiedname>Factory::createVehicle</qualifiedname>
        <reimplementedby refid="class_aircraft_factory_1a12eaf0614eaf14c8a3ec46f9b7ad2696">createVehicle</reimplementedby>
        <reimplementedby refid="class_aquatic_vehicle_factory_1ad3b796188f11458cda8f82272ca867c8">createVehicle</reimplementedby>
        <reimplementedby refid="class_land_vehicle_factory_1a4a56b7485402388677e1bc8bd9d46529">createVehicle</reimplementedby>
        <param>
          <type>string</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>HP</declname>
        </param>
        <param>
          <type>double</type>
          <declname>damage</declname>
        </param>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HP</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vehicle is returned with parameters given as attributes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Factory.h" line="24" column="22"/>
        <referencedby refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" compoundref="main_8cpp" startline="42" endline="68">testFactory</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_factory_1a4908da4e870fd8774dd27a653d7bc8fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Factory::setVehicle</definition>
        <argsstring>(Vehicles *v)</argsstring>
        <name>setVehicle</name>
        <qualifiedname>Factory::setVehicle</qualifiedname>
        <param>
          <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Factory.h" line="25" column="10" bodyfile="Factory.cpp" bodystart="8" bodyend="10"/>
        <referencedby refid="class_aircraft_factory_1a12eaf0614eaf14c8a3ec46f9b7ad2696" compoundref="_aircraft_factory_8cpp" startline="7" endline="11">AircraftFactory::createVehicle</referencedby>
        <referencedby refid="class_aquatic_vehicle_factory_1ad3b796188f11458cda8f82272ca867c8" compoundref="_aquatic_vehicle_factory_8cpp" startline="7" endline="11">AquaticVehicleFactory::createVehicle</referencedby>
        <referencedby refid="class_land_vehicle_factory_1a4a56b7485402388677e1bc8bd9d46529" compoundref="_land_vehicle_factory_8cpp" startline="7" endline="11">LandVehicleFactory::createVehicle</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_factory_1a5cf29733525cdecf9327d4d33e15c217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> *</type>
        <definition>Vehicles * Factory::getVehicle</definition>
        <argsstring>()</argsstring>
        <name>getVehicle</name>
        <qualifiedname>Factory::getVehicle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Factory.h" line="26" column="14" bodyfile="Factory.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_factory_1a1711bb7dac12c0badaacd18d5fba332d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Factory::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>Factory::destroy</qualifiedname>
        <reimplements refid="class_infrastructure_1afeb7bb200bf923d63e33436ad63578b7">destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Factory.h" line="27" column="10" bodyfile="Factory.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>AircraftFactory</label>
        <link refid="class_aircraft_factory"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>AquaticVehicleFactory</label>
        <link refid="class_aquatic_vehicle_factory"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Factory</label>
        <link refid="class_factory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Infrastructure</label>
        <link refid="class_infrastructure"/>
      </node>
      <node id="5">
        <label>LandVehicleFactory</label>
        <link refid="class_land_vehicle_factory"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Factory</label>
        <link refid="class_factory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Infrastructure</label>
        <link refid="class_infrastructure"/>
      </node>
    </collaborationgraph>
    <location file="Factory.h" line="11" column="1" bodyfile="Factory.h" bodystart="11" bodyend="28"/>
    <listofallmembers>
      <member refid="class_factory_1a19e6331ae3eca8c4a3242df7dc786044" prot="public" virt="pure-virtual"><scope>Factory</scope><name>createVehicle</name></member>
      <member refid="class_factory_1a1711bb7dac12c0badaacd18d5fba332d" prot="public" virt="virtual"><scope>Factory</scope><name>destroy</name></member>
      <member refid="class_infrastructure_1a290ec5ce78b81318f725421833a23679" prot="public" virt="non-virtual"><scope>Factory</scope><name>getHP</name></member>
      <member refid="class_factory_1a5cf29733525cdecf9327d4d33e15c217" prot="public" virt="non-virtual"><scope>Factory</scope><name>getVehicle</name></member>
      <member refid="class_factory_1a4908da4e870fd8774dd27a653d7bc8fc" prot="public" virt="non-virtual"><scope>Factory</scope><name>setVehicle</name></member>
      <member refid="class_factory_1a491b82965922ce167e8d16ba7876dcb6" prot="private" virt="non-virtual"><scope>Factory</scope><name>vehicle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
