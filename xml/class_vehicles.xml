<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_vehicles" kind="class" language="C++" prot="public">
    <compoundname>Vehicles</compoundname>
    <derivedcompoundref refid="class_aircraft" prot="public" virt="non-virtual">Aircraft</derivedcompoundref>
    <derivedcompoundref refid="class_aquatic_vehicles" prot="public" virt="non-virtual">AquaticVehicles</derivedcompoundref>
    <derivedcompoundref refid="class_land_vehicles" prot="public" virt="non-virtual">LandVehicles</derivedcompoundref>
    <includes refid="_vehicles_8h" local="no">Vehicles.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_vehicles_1adddf551ddcdd2f50c4699806b6511e3a" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Vehicles::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <qualifiedname>Vehicles::model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="14" column="12" bodyfile="Vehicles.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vehicles_1abcab16b8f70dd936a3f362652e472b8d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Vehicles::HP</definition>
        <argsstring></argsstring>
        <name>HP</name>
        <qualifiedname>Vehicles::HP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="15" column="12" bodyfile="Vehicles.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vehicles_1a2d6898ff0f7596063071ab1ca461a347" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Vehicles::damage</definition>
        <argsstring></argsstring>
        <name>damage</name>
        <qualifiedname>Vehicles::damage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="16" column="12" bodyfile="Vehicles.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vehicles_1a22fd11fa5a842d1ffaa16d7b0bf8273a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Vehicles::speed</definition>
        <argsstring></argsstring>
        <name>speed</name>
        <qualifiedname>Vehicles::speed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="17" column="12" bodyfile="Vehicles.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vehicles_1ae56cd2894660879cf754892d4cb7f62e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Vehicles::level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>Vehicles::level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="18" column="9" bodyfile="Vehicles.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_vehicles_1a03fd617c5824380ac207eba83a24cdfd" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Vehicles::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Vehicles::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="20" column="12" bodyfile="Vehicles.h" bodystart="20" bodyend="-1"/>
        <referencedby refid="class_aircraft_1a766e405441bb54b339de66792d332e7a" compoundref="_aircraft_8cpp" startline="8" endline="10">Aircraft::Aircraft</referencedby>
        <referencedby refid="class_aquatic_vehicles_1a6bd846d6cae7e7be5be90b7fa753f245" compoundref="_aquatic_vehicles_8cpp" startline="7" endline="9">AquaticVehicles::AquaticVehicles</referencedby>
        <referencedby refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" compoundref="_vehicles_8cpp" startline="40" endline="44">clone</referencedby>
        <referencedby refid="class_land_vehicles_1a71efe7c56ba6e0b83c3a2b7d76b00a54" compoundref="_land_vehicles_8cpp" startline="7" endline="9">LandVehicles::LandVehicles</referencedby>
        <referencedby refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" compoundref="_vehicles_8cpp" startline="74" endline="78">print</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vehicles_1aa2df1fbccabbb0ea340bd468b1bc0b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vehicles::Vehicles</definition>
        <argsstring>(string model, double HP, double damage, double speed)</argsstring>
        <name>Vehicles</name>
        <qualifiedname>Vehicles::Vehicles</qualifiedname>
        <param>
          <type>string</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>HP</declname>
        </param>
        <param>
          <type>double</type>
          <declname>damage</declname>
        </param>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="24" column="5" bodyfile="Vehicles.cpp" bodystart="10" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1aa193233d151e5445362e1653d0ee84d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Vehicles::getModel</definition>
        <argsstring>()</argsstring>
        <name>getModel</name>
        <qualifiedname>Vehicles::getModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="25" column="12" bodyfile="Vehicles.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a82892beb6d2c189ea2c2017f4490de55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Vehicles::getHP</definition>
        <argsstring>()</argsstring>
        <name>getHP</name>
        <qualifiedname>Vehicles::getHP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="26" column="12" bodyfile="Vehicles.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a7f2287429b153e854816e8d87044d8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Vehicles::getDamage</definition>
        <argsstring>()</argsstring>
        <name>getDamage</name>
        <qualifiedname>Vehicles::getDamage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="27" column="12" bodyfile="Vehicles.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a883a932fcb6d9311819c8f1342f6a3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Vehicles::getSpeed</definition>
        <argsstring>()</argsstring>
        <name>getSpeed</name>
        <qualifiedname>Vehicles::getSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="28" column="12" bodyfile="Vehicles.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a97440c0756cc995386c33da153b3c60a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Vehicles::getLevel</definition>
        <argsstring>()</argsstring>
        <name>getLevel</name>
        <qualifiedname>Vehicles::getLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="29" column="9" bodyfile="Vehicles.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a7af555dca13197831dec6a29960ebca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> *</type>
        <definition>Vehicles * Vehicles::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <qualifiedname>Vehicles::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="30" column="14" bodyfile="Vehicles.cpp" bodystart="40" bodyend="44"/>
        <references refid="class_vehicles_1a03fd617c5824380ac207eba83a24cdfd" compoundref="_vehicles_8h" startline="20">type</references>
        <referencedby refid="class_vehicles_1a0cf80dbfa1a6453e39d7bb3d5ae13968" compoundref="_vehicles_8cpp" startline="47" endline="58">clone</referencedby>
        <referencedby refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" compoundref="main_8cpp" startline="42" endline="68">testFactory</referencedby>
        <referencedby refid="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" compoundref="main_8cpp" startline="70" endline="88">testMultipleClones</referencedby>
        <referencedby refid="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" compoundref="main_8cpp" startline="14" endline="41">testVehicles</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a0cf80dbfa1a6453e39d7bb3d5ae13968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> **</type>
        <definition>Vehicles ** Vehicles::clone</definition>
        <argsstring>(int n)</argsstring>
        <name>clone</name>
        <qualifiedname>Vehicles::clone</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="31" column="14" bodyfile="Vehicles.cpp" bodystart="47" bodyend="58"/>
        <references refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" compoundref="_vehicles_8cpp" startline="40" endline="44">clone</references>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a211459063a1c20f5ca4d1c83bafb4779" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Vehicles::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>Vehicles::update</qualifiedname>
        <reimplementedby refid="class_aircraft_1aff5908917582785f9d716a4d7a9ad1a6">update</reimplementedby>
        <reimplementedby refid="class_aquatic_vehicles_1a013752f969baee73a5d55002cf03277f">update</reimplementedby>
        <reimplementedby refid="class_land_vehicles_1ad34fdffafac3715a2e2f9ab4038d73dd">update</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="32" column="18" bodyfile="Vehicles.cpp" bodystart="81" bodyend="83"/>
        <references refid="class_vehicles_1a2e2544908fae0fe028acbb2f1462325a" compoundref="_vehicles_8cpp" startline="65" endline="72">incLevel</references>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1aae3d6a7e6fec7ff6f0167d18e53d413f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vehicles::takeDamage</definition>
        <argsstring>(double dmg)</argsstring>
        <name>takeDamage</name>
        <qualifiedname>Vehicles::takeDamage</qualifiedname>
        <param>
          <type>double</type>
          <declname>dmg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="33" column="10" bodyfile="Vehicles.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a2e2544908fae0fe028acbb2f1462325a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vehicles::incLevel</definition>
        <argsstring>()</argsstring>
        <name>incLevel</name>
        <qualifiedname>Vehicles::incLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="34" column="10" bodyfile="Vehicles.cpp" bodystart="65" bodyend="72"/>
        <referencedby refid="class_aircraft_1aff5908917582785f9d716a4d7a9ad1a6" compoundref="_aircraft_8cpp" startline="12" endline="14">Aircraft::update</referencedby>
        <referencedby refid="class_aquatic_vehicles_1a013752f969baee73a5d55002cf03277f" compoundref="_aquatic_vehicles_8cpp" startline="11" endline="13">AquaticVehicles::update</referencedby>
        <referencedby refid="class_land_vehicles_1ad34fdffafac3715a2e2f9ab4038d73dd" compoundref="_land_vehicles_8cpp" startline="11" endline="13">LandVehicles::update</referencedby>
        <referencedby refid="class_vehicles_1a211459063a1c20f5ca4d1c83bafb4779" compoundref="_vehicles_8cpp" startline="81" endline="83">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vehicles::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <qualifiedname>Vehicles::print</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="35" column="10" bodyfile="Vehicles.cpp" bodystart="74" bodyend="78"/>
        <references refid="class_vehicles_1a03fd617c5824380ac207eba83a24cdfd" compoundref="_vehicles_8h" startline="20">type</references>
        <referencedby refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" compoundref="main_8cpp" startline="42" endline="68">testFactory</referencedby>
        <referencedby refid="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" compoundref="main_8cpp" startline="70" endline="88">testMultipleClones</referencedby>
        <referencedby refid="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" compoundref="main_8cpp" startline="14" endline="41">testVehicles</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vehicles_1a561aeec7ac39618f337c117048a7a9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vehicles::attack</definition>
        <argsstring>(Vehicles *theEnemy)</argsstring>
        <name>attack</name>
        <qualifiedname>Vehicles::attack</qualifiedname>
        <param>
          <type><ref refid="class_vehicles" kindref="compound">Vehicles</ref> *</type>
          <declname>theEnemy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Vehicles.h" line="36" column="10" bodyfile="Vehicles.cpp" bodystart="86" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aircraft</label>
        <link refid="class_aircraft"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>AquaticVehicles</label>
        <link refid="class_aquatic_vehicles"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>LandVehicles</label>
        <link refid="class_land_vehicles"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Vehicles</label>
        <link refid="class_vehicles"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Vehicles</label>
        <link refid="class_vehicles"/>
      </node>
    </collaborationgraph>
    <location file="Vehicles.h" line="12" column="1" bodyfile="Vehicles.h" bodystart="12" bodyend="39"/>
    <listofallmembers>
      <member refid="class_vehicles_1a561aeec7ac39618f337c117048a7a9c2" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>attack</name></member>
      <member refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>clone</name></member>
      <member refid="class_vehicles_1a0cf80dbfa1a6453e39d7bb3d5ae13968" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>clone</name></member>
      <member refid="class_vehicles_1a2d6898ff0f7596063071ab1ca461a347" prot="private" virt="non-virtual"><scope>Vehicles</scope><name>damage</name></member>
      <member refid="class_vehicles_1a7f2287429b153e854816e8d87044d8c2" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>getDamage</name></member>
      <member refid="class_vehicles_1a82892beb6d2c189ea2c2017f4490de55" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>getHP</name></member>
      <member refid="class_vehicles_1a97440c0756cc995386c33da153b3c60a" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>getLevel</name></member>
      <member refid="class_vehicles_1aa193233d151e5445362e1653d0ee84d7" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>getModel</name></member>
      <member refid="class_vehicles_1a883a932fcb6d9311819c8f1342f6a3ef" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>getSpeed</name></member>
      <member refid="class_vehicles_1abcab16b8f70dd936a3f362652e472b8d" prot="private" virt="non-virtual"><scope>Vehicles</scope><name>HP</name></member>
      <member refid="class_vehicles_1a2e2544908fae0fe028acbb2f1462325a" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>incLevel</name></member>
      <member refid="class_vehicles_1ae56cd2894660879cf754892d4cb7f62e" prot="private" virt="non-virtual"><scope>Vehicles</scope><name>level</name></member>
      <member refid="class_vehicles_1adddf551ddcdd2f50c4699806b6511e3a" prot="private" virt="non-virtual"><scope>Vehicles</scope><name>model</name></member>
      <member refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>print</name></member>
      <member refid="class_vehicles_1a22fd11fa5a842d1ffaa16d7b0bf8273a" prot="private" virt="non-virtual"><scope>Vehicles</scope><name>speed</name></member>
      <member refid="class_vehicles_1aae3d6a7e6fec7ff6f0167d18e53d413f" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>takeDamage</name></member>
      <member refid="class_vehicles_1a03fd617c5824380ac207eba83a24cdfd" prot="protected" virt="non-virtual"><scope>Vehicles</scope><name>type</name></member>
      <member refid="class_vehicles_1a211459063a1c20f5ca4d1c83bafb4779" prot="public" virt="virtual"><scope>Vehicles</scope><name>update</name></member>
      <member refid="class_vehicles_1aa2df1fbccabbb0ea340bd468b1bc0b58" prot="public" virt="non-virtual"><scope>Vehicles</scope><name>Vehicles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
