<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="_vehicles_8h" local="yes">Vehicles.h</includes>
    <includes refid="_land_vehicles_8h" local="yes">LandVehicles.h</includes>
    <includes refid="_aquatic_vehicles_8h" local="yes">AquaticVehicles.h</includes>
    <includes refid="_aircraft_8h" local="yes">Aircraft.h</includes>
    <includes refid="_infrastructure_8h" local="yes">Infrastructure.h</includes>
    <includes refid="_aquatic_vehicle_factory_8h" local="yes">AquaticVehicleFactory.h</includes>
    <includes refid="_land_vehicle_factory_8h" local="yes">LandVehicleFactory.h</includes>
    <includes refid="_aircraft_factory_8h" local="yes">AircraftFactory.h</includes>
    <includes refid="_factory_8h" local="yes">Factory.h</includes>
    <includes refid="_research_and_development_centre_8h" local="yes">ResearchAndDevelopmentCentre.h</includes>
    <includes refid="_aircraft_development_8h" local="yes">AircraftDevelopment.h</includes>
    <incdepgraph>
      <node id="10">
        <label>Aircraft.h</label>
        <link refid="_aircraft_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>AircraftDevelopment.h</label>
        <link refid="_aircraft_development_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>AircraftFactory.h</label>
        <link refid="_aircraft_factory_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>AquaticVehicleFactory.h</label>
        <link refid="_aquatic_vehicle_factory_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>AquaticVehicles.h</label>
        <link refid="_aquatic_vehicles_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Factory.h</label>
        <link refid="_factory_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Infrastructure.h</label>
        <link refid="_infrastructure_8h"/>
      </node>
      <node id="13">
        <label>LandVehicleFactory.h</label>
        <link refid="_land_vehicle_factory_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>LandVehicles.h</label>
        <link refid="_land_vehicles_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ResearchAndDevelopmentCentre.h</label>
        <link refid="_research_and_development_centre_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Vehicles.h</label>
        <link refid="_vehicles_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testVehicles</definition>
        <argsstring>(int numVehicles)</argsstring>
        <name>testVehicles</name>
        <param>
          <type>int</type>
          <declname>numVehicles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="14" column="6" bodyfile="main.cpp" bodystart="14" bodyend="41"/>
        <references refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" compoundref="_vehicles_8cpp" startline="40" endline="44">Vehicles::clone</references>
        <references refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" compoundref="_vehicles_8cpp" startline="74" endline="78">Vehicles::print</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="110" endline="119">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aad3133c98f96087e05542788a15088ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testFactory</definition>
        <argsstring>(int numVehicles)</argsstring>
        <name>testFactory</name>
        <param>
          <type>int</type>
          <declname>numVehicles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="42" column="6" bodyfile="main.cpp" bodystart="42" bodyend="68"/>
        <references refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" compoundref="_vehicles_8cpp" startline="40" endline="44">Vehicles::clone</references>
        <references refid="class_factory_1a19e6331ae3eca8c4a3242df7dc786044">Factory::createVehicle</references>
        <references refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" compoundref="_vehicles_8cpp" startline="74" endline="78">Vehicles::print</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="110" endline="119">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testMultipleClones</definition>
        <argsstring>(int numClones)</argsstring>
        <name>testMultipleClones</name>
        <param>
          <type>int</type>
          <declname>numClones</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="70" column="6" bodyfile="main.cpp" bodystart="70" bodyend="88"/>
        <references refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" compoundref="_vehicles_8cpp" startline="40" endline="44">Vehicles::clone</references>
        <references refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" compoundref="_vehicles_8cpp" startline="74" endline="78">Vehicles::print</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="110" endline="119">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a65f3bd13192b609e4a7453f7a25a26cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testAddingToList</definition>
        <argsstring>()</argsstring>
        <name>testAddingToList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="90" column="6" bodyfile="main.cpp" bodystart="90" bodyend="108"/>
        <references refid="class_research_and_development_centre_1a057bbd7a3e9b01a9333f0c4d3a2b6bcf" compoundref="_research_and_development_centre_8cpp" startline="45" endline="50">ResearchAndDevelopmentCentre::addToList</references>
        <references refid="class_research_and_development_centre_1ab1d6529e168f19ba632da0acae810179" compoundref="_research_and_development_centre_8cpp" startline="37" endline="43">ResearchAndDevelopmentCentre::printList</references>
        <references refid="class_research_and_development_centre_1a9dac8513173caa35aa4dea09aa80b348" compoundref="_research_and_development_centre_8cpp" startline="26" endline="30">ResearchAndDevelopmentCentre::startDeveloping</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="110" endline="119">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="110" column="5" bodyfile="main.cpp" bodystart="110" bodyend="119"/>
        <references refid="main_8cpp_1a65f3bd13192b609e4a7453f7a25a26cb" compoundref="main_8cpp" startline="90" endline="108">testAddingToList</references>
        <references refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" compoundref="main_8cpp" startline="42" endline="68">testFactory</references>
        <references refid="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" compoundref="main_8cpp" startline="70" endline="88">testMultipleClones</references>
        <references refid="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" compoundref="main_8cpp" startline="14" endline="41">testVehicles</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vehicles_8h" kindref="compound">Vehicles.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_land_vehicles_8h" kindref="compound">LandVehicles.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_aquatic_vehicles_8h" kindref="compound">AquaticVehicles.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_aircraft_8h" kindref="compound">Aircraft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_infrastructure_8h" kindref="compound">Infrastructure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_aquatic_vehicle_factory_8h" kindref="compound">AquaticVehicleFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_land_vehicle_factory_8h" kindref="compound">LandVehicleFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_aircraft_factory_8h" kindref="compound">AircraftFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_factory_8h" kindref="compound">Factory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_research_and_development_centre_8h" kindref="compound">ResearchAndDevelopmentCentre.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_aircraft_development_8h" kindref="compound">AircraftDevelopment.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" kindref="member">testVehicles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVehicles){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>Vehicles:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*vehicles[numVehicles];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numVehicles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>types<sp/>of<sp/>vehicles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i%3)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vehicles[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_land_vehicles" kindref="compound">LandVehicles</ref>(</highlight><highlight class="stringliteral">&quot;BMW&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>10,<sp/>200);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vehicles[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aircraft" kindref="compound">Aircraft</ref>(</highlight><highlight class="stringliteral">&quot;Fighter<sp/>Jet&quot;</highlight><highlight class="normal">,<sp/>30,<sp/>200,<sp/>150);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vehicles[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aquatic_vehicles" kindref="compound">AquaticVehicles</ref>(</highlight><highlight class="stringliteral">&quot;BO-AT&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>30,<sp/>50);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vehicles[i]-&gt;<ref refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*clone<sp/>=<sp/>vehicles[0]-&gt;<ref refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;clone:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>clone<sp/>-&gt;<sp/>print();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42" refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" kindref="member">testFactory</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVehicles){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>Factory:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_factory" kindref="compound">Factory</ref><sp/>*f[3];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>f[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_land_vehicle_factory" kindref="compound">LandVehicleFactory</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>f[1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aircraft_factory" kindref="compound">AircraftFactory</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>f[2]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aquatic_vehicle_factory" kindref="compound">AquaticVehicleFactory</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*v[numVehicles];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numVehicles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i%3)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[i]<sp/>=<sp/>f[0]-&gt;<ref refid="class_factory_1a19e6331ae3eca8c4a3242df7dc786044" kindref="member">createVehicle</ref>(</highlight><highlight class="stringliteral">&quot;BMW&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>10,<sp/>200);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[i]<sp/>=<sp/>f[1]-&gt;<ref refid="class_factory_1a19e6331ae3eca8c4a3242df7dc786044" kindref="member">createVehicle</ref>(</highlight><highlight class="stringliteral">&quot;Fighter<sp/>Jet&quot;</highlight><highlight class="normal">,<sp/>30,<sp/>200,<sp/>150);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[i]<sp/>=<sp/>f[2]-&gt;<ref refid="class_factory_1a19e6331ae3eca8c4a3242df7dc786044" kindref="member">createVehicle</ref>(</highlight><highlight class="stringliteral">&quot;BO-AT&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>30,<sp/>50);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[i]-&gt;<ref refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*clone;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>clone<sp/>=<sp/>f[0]-&gt;<ref refid="class_factory_1a19e6331ae3eca8c4a3242df7dc786044" kindref="member">createVehicle</ref>(</highlight><highlight class="stringliteral">&quot;Honda&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>10,<sp/>10)-&gt;<ref refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;clone:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>clone-&gt;<ref refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" kindref="member">testMultipleClones</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numClones){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_land_vehicles" kindref="compound">LandVehicles</ref>(</highlight><highlight class="stringliteral">&quot;T2&quot;</highlight><highlight class="normal">,1,1,1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>**clones;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>Multiple<sp/>Clones:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>clones<sp/>=<sp/>v-&gt;<ref refid="class_vehicles_1a7af555dca13197831dec6a29960ebca1" kindref="member">clone</ref>(numClones);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numClones;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clones[i]-&gt;<ref refid="class_vehicles_1ae80e43b8e1b19caf998f29f3f068aaf3" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//deallocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numClones;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clones[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clones;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="main_8cpp_1a65f3bd13192b609e4a7453f7a25a26cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a65f3bd13192b609e4a7453f7a25a26cb" kindref="member">testAddingToList</ref>(){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_research_and_development_centre" kindref="compound">ResearchAndDevelopmentCentre</ref><sp/>*r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aircraft_development" kindref="compound">AircraftDevelopment</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*a1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aircraft" kindref="compound">Aircraft</ref>(</highlight><highlight class="stringliteral">&quot;aircraft1&quot;</highlight><highlight class="normal">,<sp/>1,1,1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vehicles" kindref="compound">Vehicles</ref><sp/>*a2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_aircraft" kindref="compound">Aircraft</ref>(</highlight><highlight class="stringliteral">&quot;aircraft2&quot;</highlight><highlight class="normal">,<sp/>1,1,1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1a057bbd7a3e9b01a9333f0c4d3a2b6bcf" kindref="member">addToList</ref>(a1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>have<sp/>1<sp/>item:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1ab1d6529e168f19ba632da0acae810179" kindref="member">printList</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1a9dac8513173caa35aa4dea09aa80b348" kindref="member">startDeveloping</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1a057bbd7a3e9b01a9333f0c4d3a2b6bcf" kindref="member">addToList</ref>(a1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1a057bbd7a3e9b01a9333f0c4d3a2b6bcf" kindref="member">addToList</ref>(a2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>have<sp/>2<sp/>items:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1ab1d6529e168f19ba632da0acae810179" kindref="member">printList</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="class_research_and_development_centre_1a9dac8513173caa35aa4dea09aa80b348" kindref="member">startDeveloping</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>a1-&gt;print();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>a2-&gt;print();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a9d2fc40ead8778a67ed3447a34f11e76" kindref="member">testVehicles</ref>(10);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aad3133c98f96087e05542788a15088ef" kindref="member">testFactory</ref>(10);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a549bd9bff92ec12a94d73a613f1b9e22" kindref="member">testMultipleClones</ref>(5);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a65f3bd13192b609e4a7453f7a25a26cb" kindref="member">testAddingToList</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
